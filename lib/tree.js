"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var BTNode=function(){},BinaryTree=function(){function t(){}return t.prototype.create=function(t){function i(t,e,r){"lchild"==e?" "!=r[l]?(t.lchild=new BTNode,t.lchild.data=r[l++],i(t.lchild,"lchild",r),i(t.lchild,"rchild",r)):(t.lchild=null,l++):" "!=r[l]?(t.rchild=new BTNode,t.rchild.data=r[l++],i(t.rchild,"lchild",r),i(t.rchild,"rchild",r)):(t.rchild=null,l++)}if(t instanceof Array){var l=0;" "!=t[l]?(this.tree=new BTNode,this.tree.data=t[l++],i(this.tree,"lchild",t),i(this.tree,"rchild",t)):this.tree=null}},t.prototype.depth=function(){return function t(e){return e?(r=t(e.lchild),(i=t(e.rchild))<r?r+1:i+1):0;var r,i}(this.tree)},t.prototype.countLeaf=function(){var r=0;return function t(e){e&&(t(e.lchild),t(e.rchild),e.lchild||e.rchild||r++)}(this.tree),r},t.prototype.preOrderTraverse=function(r){"function"==typeof r&&function t(e){e&&(r(e.data),t(e.lchild),t(e.rchild))}(this.tree)},t.prototype.inOrderTraverse=function(r){"function"==typeof r&&function t(e){e&&(t(e.lchild),r(e.data),t(e.rchild))}(this.tree)},t.prototype.postOrderTraverse=function(r){"function"==typeof r&&function t(e){e&&(t(e.lchild),t(e.rchild),r(e.data))}(this.tree)},t.prototype.levelTraverse=function(t){var e=[];for(this.tree&&e.push(this.tree);e.length;){var r=e.shift();t(r.data),r.lchild&&e.push(r.lchild),r.rchild&&e.push(r.rchild)}},t}();exports.BinaryTree=BinaryTree;